// -*- C++ -*- generated by wxGlade 0.6.3 on Fri Feb 25 18:55:11 2011

#include "CategoryFrame.h"

// begin wxGlade: ::extracode

// end wxGlade


CategoryFrame::CategoryFrame(wxWindow* parent, int id, const wxString& title, const wxPoint& pos, const wxSize& size, long style):
    wxFrame(parent, id, title, pos, size, wxDEFAULT_FRAME_STYLE)
{
    // begin wxGlade: CategoryFrame::CategoryFrame
    panel_1 = new wxPanel(this, wxID_ANY);
    menubar = new wxMenuBar();
    wxMenu* wxglade_tmp_menu_1 = new wxMenu();
    wxglade_tmp_menu_1->Append(wxID_CLOSE, wxEmptyString, wxEmptyString, wxITEM_NORMAL);
    menubar->Append(wxglade_tmp_menu_1, wxT("&Category"));
    wxMenu* wxglade_tmp_menu_2 = new wxMenu();
    wxglade_tmp_menu_2->Append(wxID_ADD, wxT("&Add Money..."), wxEmptyString, wxITEM_NORMAL);
    wxglade_tmp_menu_2->Append(wxID_REMOVE, wxT("&Remove Money..."), wxEmptyString, wxITEM_NORMAL);
    wxglade_tmp_menu_2->AppendSeparator();
    wxglade_tmp_menu_2->Append(wxID_EDIT, wxT("&Edit..."), wxEmptyString, wxITEM_NORMAL);
    wxglade_tmp_menu_2->Append(wxID_DELETE, wxEmptyString, wxEmptyString, wxITEM_NORMAL);
    menubar->Append(wxglade_tmp_menu_2, wxT("&Transaction"));
    SetMenuBar(menubar);
    transactionList = new wxListCtrl(panel_1, wxID_ANY, wxDefaultPosition, wxDefaultSize, wxLC_REPORT|wxLC_SINGLE_SEL|wxLC_SORT_ASCENDING|wxSUNKEN_BORDER);
    totalLabel = new wxStaticText(panel_1, wxID_ANY, wxT("Total: 0.00"));

    set_properties();
    do_layout();
    // end wxGlade
}


BEGIN_EVENT_TABLE(CategoryFrame, wxFrame)
    // begin wxGlade: CategoryFrame::event_table
    EVT_MENU(wxID_CLOSE, CategoryFrame::OnClosePressed)
    EVT_MENU(wxID_ADD, CategoryFrame::OnAddPressed)
    EVT_MENU(wxID_REMOVE, CategoryFrame::OnRemovePressed)
    EVT_MENU(wxID_EDIT, CategoryFrame::OnEditPressed)
    EVT_MENU(wxID_DELETE, CategoryFrame::OnDeletePressed)
    EVT_LIST_ITEM_DESELECTED(wxID_ANY, CategoryFrame::OnTransactionDeselected)
    EVT_LIST_ITEM_SELECTED(wxID_ANY, CategoryFrame::OnTransactionSelected)
    EVT_LIST_ITEM_ACTIVATED(wxID_ANY, CategoryFrame::OnTransactionActivated)
    // end wxGlade
END_EVENT_TABLE();


void CategoryFrame::OnClosePressed(wxCommandEvent &event)
{
    event.Skip();
    wxLogDebug(wxT("Event handler (CategoryFrame::OnClosePressed) not implemented yet")); //notify the user that he hasn't implemented the event handler yet
}


void CategoryFrame::OnAddPressed(wxCommandEvent &event)
{
    event.Skip();
    wxLogDebug(wxT("Event handler (CategoryFrame::OnAddPressed) not implemented yet")); //notify the user that he hasn't implemented the event handler yet
}


void CategoryFrame::OnRemovePressed(wxCommandEvent &event)
{
    event.Skip();
    wxLogDebug(wxT("Event handler (CategoryFrame::OnRemovePressed) not implemented yet")); //notify the user that he hasn't implemented the event handler yet
}


void CategoryFrame::OnEditPressed(wxCommandEvent &event)
{
    event.Skip();
    wxLogDebug(wxT("Event handler (CategoryFrame::OnEditPressed) not implemented yet")); //notify the user that he hasn't implemented the event handler yet
}


void CategoryFrame::OnDeletePressed(wxCommandEvent &event)
{
    event.Skip();
    wxLogDebug(wxT("Event handler (CategoryFrame::OnDeletePressed) not implemented yet")); //notify the user that he hasn't implemented the event handler yet
}


void CategoryFrame::OnTransactionDeselected(wxListEvent &event)
{
    event.Skip();
    wxLogDebug(wxT("Event handler (CategoryFrame::OnTransactionDeselected) not implemented yet")); //notify the user that he hasn't implemented the event handler yet
}


void CategoryFrame::OnTransactionSelected(wxListEvent &event)
{
    event.Skip();
    wxLogDebug(wxT("Event handler (CategoryFrame::OnTransactionSelected) not implemented yet")); //notify the user that he hasn't implemented the event handler yet
}


void CategoryFrame::OnTransactionActivated(wxListEvent &event)
{
    event.Skip();
    wxLogDebug(wxT("Event handler (CategoryFrame::OnTransactionActivated) not implemented yet")); //notify the user that he hasn't implemented the event handler yet
}


// wxGlade: add CategoryFrame event handlers


void CategoryFrame::set_properties()
{
    // begin wxGlade: CategoryFrame::set_properties
    SetTitle(wxT("Category"));
    SetSize(wxSize(500, 300));
    // end wxGlade
}


void CategoryFrame::do_layout()
{
    // begin wxGlade: CategoryFrame::do_layout
    wxBoxSizer* sizer_1 = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* sizer_2 = new wxBoxSizer(wxVERTICAL);
    sizer_2->Add(transactionList, 1, wxEXPAND, 0);
    sizer_2->Add(totalLabel, 0, wxALL|wxALIGN_RIGHT, 5);
    panel_1->SetSizer(sizer_2);
    sizer_1->Add(panel_1, 1, wxEXPAND, 0);
    SetSizer(sizer_1);
    Layout();
    // end wxGlade
}

